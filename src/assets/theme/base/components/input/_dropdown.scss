.p-dropdown {
  background: $inputBg;
  border: $inputBorder;
  transition: $formElementTransition;
  border-radius: $borderRadius;

  &.p-disabled {
    background-color: $gray-500;
  }

  & .ng-touched.ng-invalid {
    .p-dropdown {
      border: 1px solid $error-700;
    }
  }

  &:not(.p-disabled):hover {
    border-color: $inputHoverBorderColor;
  }

  &:not(.p-disabled).p-focus {
    @include focused-input();
  }

  &.p-dropdown-clearable {
    .p-dropdown-label {
      padding-right: nth($inputPadding, 2) + $primeIconFontSize;
    }
  }

  .p-dropdown-label {
    background: transparent;
    border: 0 none;

    &.p-placeholder {
      color: $inputPlaceholderTextColor;
    }

    &:enabled:focus {
      outline: 0 none;
      box-shadow: none;
    }
  }

  .p-dropdown-trigger {
    background: transparent;
    color: $inputIconColor;
    // width: $inputGroupAddOnMinWidth;
    width: 3.357rem;
    border-top-right-radius: $borderRadius;
    border-bottom-right-radius: $borderRadius;

    svg {
      color: $gray-600;
    }
  }

  .p-dropdown-clear-icon {
    // color: $inputIconColor;
    color: $gray-700;
    // right: $inputGroupAddOnMinWidth;
    right: 3.357rem;
    margin: 0;
    transform: translateY(-50%);

    [dir='rtl'] & {
      right: auto;
      left: 3.357rem;
    }
  }
}

.p-dropdown-panel {
  background: $inputOverlayBg;
  color: $inputListTextColor;
  border: $inputOverlayBorder;
  border-radius: $borderRadius;
  box-shadow: $inputOverlayShadow;

  .p-dropdown-header {
    padding: $inputListHeaderPadding;
    border-bottom: $inputListHeaderBorder;
    color: $inputListHeaderTextColor;
    background: $inputOverlayHeaderBg;
    margin: $inputListHeaderMargin;
    border-top-right-radius: $borderRadius;
    border-top-left-radius: $borderRadius;

    .p-dropdown-filter {
      padding-right: nth($inputPadding, 2) + $primeIconFontSize;
      margin-right: -1 * (nth($inputPadding, 2) + $primeIconFontSize);

      [dir='rtl'] & {
        padding-right: 1.6rem;
        margin-right: 0;
        padding-left: nth($inputPadding, 2) + $primeIconFontSize;
        margin-left: -1 * (nth($inputPadding, 2) + $primeIconFontSize);
      }
    }

    .p-dropdown-filter-icon {
      right: nth($inputPadding, 2);
      color: $inputIconColor;

      [dir='rtl'] & {
        right: auto;
        left: nth($inputPadding, 2);
      }
    }
  }

  .p-dropdown-items {
    padding: $inputListPadding;

    .p-dropdown-item {
      margin: $inputListItemMargin;
      // padding: $inputListItemPadding;
      padding: 1.6rem;
      border: $inputListItemBorder;
      color: $inputListItemTextColor;
      background: $inputListItemBg;
      transition: $listItemTransition;
      border-radius: $inputListItemBorderRadius;
      font-size: 1.6rem;
      font-weight: 500;

      &.p-highlight {
        color: $highlightTextColor;
        background: $gray-500;
      }

      &:not(.p-highlight):not(.p-disabled):hover {
        color: $inputListItemTextHoverColor;
        background: $inputListItemHoverBg;
      }
    }

    .p-dropdown-empty-message {
      padding: $inputListItemPadding;
      color: $inputListItemTextColor;
      background: $inputListItemBg;
      font-size: 1.6rem;
    }

    .p-dropdown-item-group {
      margin: $submenuHeaderMargin;
      padding: $submenuHeaderPadding;
      color: $submenuHeaderTextColor;
      background: $submenuHeaderBg;
      font-weight: $submenuHeaderFontWeight;
    }
  }
}

p-dropdown.ng-dirty.ng-invalid > .p-dropdown {
  @include invalid-input();
}

.p-input-filled {
  .p-dropdown {
    background: $inputFilledBg;

    &:not(.p-disabled):hover {
      background-color: $inputFilledHoverBg;
    }

    &:not(.p-disabled).p-focus {
      background-color: $inputFilledFocusBg;

      .p-inputtext {
        background-color: transparent;
      }
    }
  }
}

p-dropdown {
  &.ng-touched.ng-invalid {
    .p-dropdown {
      border: 1px solid $error-700;
    }
  }
}

.dropdown-timer {
  .p-dropdown {
    width: 7rem;
    border-bottom-left-radius: 0;
    border-top-left-radius: 0;
    border-left: none;
    background: #F1F1F1;
    font-weight: 500;
    .p-inputtext{
      padding: 1.3rem 0 1.3rem 0.7rem;
      font-size: 1.5rem;
    }
    &:not(.p-disabled):hover, &:focus-visible, &:focus{
      border-color: #98A2B3;
    }
    &.p-disabled{
      opacity: 0.8;
      background: #E4E7EC
    }

  }
}
